{"version":3,"file":"angular-material-extensions-password-strength.mjs","sources":["../../../../projects/angular-material-extensions/password-strength/src/lib/enum/colors.enum.ts","../../../../projects/angular-material-extensions/password-strength/src/lib/enum/criteria.enum.ts","../../../../projects/angular-material-extensions/password-strength/src/lib/component/mat-pass-toggle-visibility/mat-pass-toggle-visibility.component.ts","../../../../projects/angular-material-extensions/password-strength/src/lib/component/mat-pass-toggle-visibility/mat-pass-toggle-visibility.component.html","../../../../projects/angular-material-extensions/password-strength/src/lib/validator/mat-password-strength-validator.ts","../../../../projects/angular-material-extensions/password-strength/src/lib/validator/regexp.class.ts","../../../../projects/angular-material-extensions/password-strength/src/lib/component/mat-password-strength/mat-password-strength.component.ts","../../../../projects/angular-material-extensions/password-strength/src/lib/component/mat-password-strength/mat-password-strength.component.html","../../../../projects/angular-material-extensions/password-strength/src/lib/animations/index.ts","../../../../projects/angular-material-extensions/password-strength/src/lib/component/mat-password-strength-info/mat-password-strength-info.component.ts","../../../../projects/angular-material-extensions/password-strength/src/lib/component/mat-password-strength-info/mat-password-strength-info.component.html","../../../../projects/angular-material-extensions/password-strength/src/lib/mat-password-strength.module.ts","../../../../projects/angular-material-extensions/password-strength/src/public-api.ts","../../../../projects/angular-material-extensions/password-strength/src/angular-material-extensions-password-strength.ts"],"sourcesContent":["export enum Colors {\n  primary = 'primary',\n  accent = 'accent',\n  warn = 'warn'\n}\n","export enum Criteria {\n  at_least_eight_chars = 'minChar',\n  at_least_one_lower_case_char = 'lowerCase',\n  at_least_one_upper_case_char = 'upperCase',\n  at_least_one_digit_char = 'digit',\n  at_least_one_special_char = ' specialChar',\n  at_custom_chars = 'customChars'\n}\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\n\n@Component({\n  selector: 'mat-pass-toggle-visibility',\n  templateUrl: './mat-pass-toggle-visibility.component.html',\n  styleUrls: ['./mat-pass-toggle-visibility.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class MatPassToggleVisibilityComponent {\n\n  @Input()\n  isVisible: boolean;\n\n  @Input()\n  tabindex?: string;\n\n  get type() {\n    return this.isVisible ? 'text' : 'password';\n  }\n\n}\n","<button\n  (click)=\"isVisible = !isVisible\"\n  class=\"mat-icon-button cdk-focused cdk-mouse-focused\"\n  mat-icon-button\n  matRipple\n  matRippleCentered=\"true\"\n  matRipple\n  [attr.tabindex]=\"tabindex ? tabindex : null\"\n  type=\"button\"\n>\n  <mat-icon>{{ isVisible ? \"visibility\" : \"visibility_off\" }}</mat-icon>\n</button>\n","import {AbstractControl, ValidatorFn} from '@angular/forms';\n\nexport class MatPasswordStrengthValidator {\n\n  isUndefinedOrEmpty(control: AbstractControl): any | undefined {\n    if (!control || !control.value || control.value.length === 0) {\n      return undefined;\n    }\n  }\n\n  validate(criteria: string, regex: RegExp): ValidatorFn {\n    const validator = (control: AbstractControl): { [key: string]: any } => {\n      this.isUndefinedOrEmpty(control);\n      if (!regex.test(control.value)) {\n        const failed = {};\n        failed[criteria] = {\n          actualValue: control.value,\n          requiredPattern: regex\n        };\n        return failed;\n      }\n      return undefined;\n    };\n    return validator;\n  }\n\n  confirm(password: string): ValidatorFn {\n    const validator = (control: AbstractControl): { [key: string]: any } => {\n      this.isUndefinedOrEmpty(control);\n      if (control.value !== password) {\n        return {\n          notConfirmed: {\n            password: password,\n            passwordConfirmation: control.value\n          }\n        }\n      }\n      return undefined;\n    };\n    return validator;\n  }\n\n}\n","export const RegExpValidator = {\n  'lowerCase': RegExp(/^(?=.*?[a-z])/),\n  'upperCase': RegExp(/^(?=.*?[A-Z])/),\n  'digit': RegExp(/^(?=.*?[0-9])/),\n  'specialChar': RegExp(/^(?=.*?[\" !\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~\"])/),\n};\n","import {\n  AfterContentChecked,\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport {ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR, ValidatorFn, Validators} from '@angular/forms';\nimport {Colors, Criteria} from '../../enum';\nimport {MatPasswordStrengthValidator} from '../../validator';\nimport {RegExpValidator} from '../../validator/regexp.class';\nimport {ThemePalette} from '@angular/material/core';\n\n\n@Component({\n  selector: 'mat-password-strength',\n  exportAs: 'matPasswordStrength',\n  templateUrl: './mat-password-strength.component.html',\n  styleUrls: ['./mat-password-strength.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => MatPasswordStrengthComponent),\n      multi: true\n    }\n  ]\n})\nexport class MatPasswordStrengthComponent implements OnInit, OnChanges, AfterContentChecked, ControlValueAccessor {\n\n  @Input() password: string;\n  @Input() externalError: boolean;\n\n  @Input() enableLengthRule = true;\n  @Input() enableLowerCaseLetterRule = true;\n  @Input() enableUpperCaseLetterRule = true;\n  @Input() enableDigitRule = true;\n  @Input() enableSpecialCharRule = true;\n\n  @Input() min = 8;\n  @Input() max = 30;\n  @Input() customValidator: RegExp;\n\n  @Input() warnThreshold = 21;\n  @Input() accentThreshold = 81;\n\n  @Output()\n  onStrengthChanged: EventEmitter<number> = new EventEmitter();\n\n  criteriaMap = new Map<Criteria, RegExp>();\n\n  containAtLeastMinChars: boolean;\n  containAtLeastOneLowerCaseLetter: boolean;\n  containAtLeastOneUpperCaseLetter: boolean;\n  containAtLeastOneDigit: boolean;\n  containAtLeastOneSpecialChar: boolean;\n  containAtCustomChars: boolean;\n\n  // TO ACCESS VIA CONTENT CHILD\n  passwordFormControl: FormControl = new FormControl();\n  passwordConfirmationFormControl: FormControl = new FormControl();\n\n  validatorsArray: ValidatorFn[] = [];\n  Validators: ValidatorFn;\n  matPasswordStrengthValidator = new MatPasswordStrengthValidator();\n\n  private _strength = 0;\n\n  get strength(): number {\n    return this._strength ? this._strength : 0;\n  }\n\n  private _color: ThemePalette;\n\n  get color(): ThemePalette {\n\n    if (this._strength < this.warnThreshold) {\n      return Colors.warn;\n    } else if (this._strength < this.accentThreshold) {\n      return Colors.accent;\n    } else {\n      return Colors.primary;\n    }\n  }\n\n  propagateChange = (_: any) => {\n  };\n\n  ngOnInit(): void {\n    this.setRulesAndValidators();\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if ((changes.externalError && changes.externalError.firstChange) || changes.password.isFirstChange()) {\n      return;\n    } else if (changes.externalError && changes.externalError.currentValue) {\n      this._color = Colors.warn;\n      return;\n    } else if (changes.password.previousValue === changes.password.currentValue && !changes.password.firstChange) {\n      this.calculatePasswordStrength();\n    } else {\n      this.password && this.password.length > 0 ?\n        this.calculatePasswordStrength() : this.reset();\n    }\n  }\n\n  parseCustomValidatorsRegex(value: string | RegExp = this.customValidator) {\n    if (this.customValidator instanceof RegExp) {\n      return this.customValidator;\n    } else if (typeof this.customValidator === 'string') {\n      return RegExp(this.customValidator);\n    }\n  }\n\n  setRulesAndValidators(): void {\n    this.validatorsArray = [];\n    this.criteriaMap = new Map<Criteria, RegExp>();\n    this.passwordConfirmationFormControl\n      .setValidators(Validators.compose([\n        Validators.required, this.matPasswordStrengthValidator.confirm(this.password)\n      ]));\n    this.validatorsArray.push(Validators.required);\n    if (this.enableLengthRule) {\n      this.criteriaMap.set(Criteria.at_least_eight_chars, RegExp(`^.{${this.min},${this.max}}$`));\n      this.validatorsArray.push(Validators.minLength(this.min));\n      this.validatorsArray.push(Validators.maxLength(this.max));\n    }\n    if (this.enableLowerCaseLetterRule) {\n      this.criteriaMap.set(Criteria.at_least_one_lower_case_char, RegExpValidator.lowerCase);\n      this.validatorsArray.push(Validators.pattern(RegExpValidator.lowerCase));\n    }\n    if (this.enableUpperCaseLetterRule) {\n      this.criteriaMap.set(Criteria.at_least_one_upper_case_char, RegExpValidator.upperCase);\n      this.validatorsArray.push(Validators.pattern(RegExpValidator.upperCase));\n    }\n    if (this.enableDigitRule) {\n      this.criteriaMap.set(Criteria.at_least_one_digit_char, RegExpValidator.digit);\n      this.validatorsArray.push(Validators.pattern(RegExpValidator.digit));\n    }\n    if (this.enableSpecialCharRule) {\n      this.criteriaMap.set(Criteria.at_least_one_special_char, RegExpValidator.specialChar);\n      this.validatorsArray.push(Validators.pattern(RegExpValidator.specialChar));\n    }\n    if (this.customValidator) {\n      this.criteriaMap.set(Criteria.at_custom_chars, this.parseCustomValidatorsRegex());\n      this.validatorsArray.push(Validators.pattern(this.parseCustomValidatorsRegex()));\n    }\n\n    this.criteriaMap.forEach((value: any, key: string) => {\n      this.validatorsArray.push(this.matPasswordStrengthValidator.validate(key, value));\n    });\n\n    this.passwordFormControl.setValidators(Validators.compose([...this.validatorsArray]));\n    this.Validators = Validators.compose([...this.validatorsArray]);\n\n  }\n\n  calculatePasswordStrength(): void {\n    const requirements: Array<boolean> = [];\n    const unit = 100 / this.criteriaMap.size;\n\n    // console.log('this.criteriaMap.size = ', this.criteriaMap.size);\n    // console.log('unit = ', unit);\n\n    requirements.push(\n      this.enableLengthRule ? this._containAtLeastMinChars() : false,\n      this.enableLowerCaseLetterRule ? this._containAtLeastOneLowerCaseLetter() : false,\n      this.enableUpperCaseLetterRule ? this._containAtLeastOneUpperCaseLetter() : false,\n      this.enableDigitRule ? this._containAtLeastOneDigit() : false,\n      this.enableSpecialCharRule ? this._containAtLeastOneSpecialChar() : false,\n      this.customValidator ? this._containCustomChars() : false\n    );\n\n    this._strength = requirements.filter(v => v).length * unit;\n    this.propagateChange(this.strength);\n    // console.log('length = ', this._strength / unit);\n    this.onStrengthChanged.emit(this.strength);\n    this.setRulesAndValidators();\n  }\n\n  reset() {\n    this._strength = 0;\n    this.containAtLeastMinChars =\n      this.containAtLeastOneLowerCaseLetter =\n        this.containAtLeastOneUpperCaseLetter =\n          this.containAtLeastOneDigit =\n            this.containAtCustomChars =\n              this.containAtLeastOneSpecialChar = false;\n  }\n\n  writeValue(obj: any): void {\n    if (obj) {\n      this._strength = obj;\n    }\n  }\n\n  registerOnChange(fn: any): void {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched(fn: any): void {\n    // throw new Error(\"Method not implemented.\");\n  }\n\n  setDisabledState?(isDisabled: boolean): void {\n    // throw new Error(\"Method not implemented.\");\n  }\n\n  private _containAtLeastMinChars(): boolean {\n    this.containAtLeastMinChars = this.password.length >= this.min;\n    return this.containAtLeastMinChars;\n  }\n\n  private _containAtLeastOneLowerCaseLetter(): boolean {\n    this.containAtLeastOneLowerCaseLetter =\n      this.criteriaMap\n        .get(Criteria.at_least_one_lower_case_char)\n        .test(this.password);\n    return this.containAtLeastOneLowerCaseLetter;\n  }\n\n  private _containAtLeastOneUpperCaseLetter(): boolean {\n    this.containAtLeastOneUpperCaseLetter =\n      this.criteriaMap\n        .get(Criteria.at_least_one_upper_case_char)\n        .test(this.password);\n    return this.containAtLeastOneUpperCaseLetter;\n  }\n\n  private _containAtLeastOneDigit(): boolean {\n    this.containAtLeastOneDigit =\n      this.criteriaMap\n        .get(Criteria.at_least_one_digit_char)\n        .test(this.password);\n    return this.containAtLeastOneDigit;\n  }\n\n  private _containAtLeastOneSpecialChar(): boolean {\n    this.containAtLeastOneSpecialChar =\n      this.criteriaMap\n        .get(Criteria.at_least_one_special_char)\n        .test(this.password);\n    return this.containAtLeastOneSpecialChar;\n  }\n\n  private _containCustomChars(): boolean {\n    this.containAtCustomChars =\n      this.criteriaMap\n        .get(Criteria.at_custom_chars)\n        .test(this.password);\n    return this.containAtCustomChars;\n  }\n\n  ngAfterContentChecked(): void {\n    if (this.password) {\n      this.calculatePasswordStrength();\n    }\n  }\n}\n","<mat-progress-bar [color]=\"color\"\n                  [value]=\"strength\"\n                  mode=\"determinate\">\n</mat-progress-bar>\n","import {animate, animation, AnimationReferenceMetadata, keyframes, style} from '@angular/animations';\n\nexport function flipIn(timing: number, rotateX: number, rotateY: number): AnimationReferenceMetadata {\n  const params = {timing: timing, delay: 0, rotateX, rotateY};\n\n  return animation(\n    [\n      style({'backface-visibility': 'visible'}),\n      animate(\n        '{{ timing }}s {{ delay }}s ease-in',\n        keyframes([\n          style({\n            opacity: 0,\n            transform:\n              'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, 90deg)',\n            offset: 0,\n          }),\n          style({\n            opacity: 1,\n            transform:\n              'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, -20deg)',\n            offset: 0.4,\n          }),\n          style({\n            transform:\n              'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, 10deg)',\n            offset: 0.6,\n          }),\n          style({\n            transform:\n              'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, -5deg)',\n            offset: 0.8,\n          }),\n          style({\n            transform: 'perspective(400px) rotate3d(0, 0, 0, 0)',\n            offset: 1,\n          }),\n        ])\n      ),\n    ],\n    {params}\n  );\n}\n\nexport const flipInX = flipIn(1, 1, 0);\nexport const flipInY = flipIn(1, 0, 1);\n\nexport const shake = animation(\n  animate(\n    '{{ timing }}s {{ delay }}s',\n    keyframes([\n      style({transform: 'translate3d(0, 0, 0)', offset: 0}),\n      style({transform: 'translate3d(-10px, 0, 0)', offset: 0.1}),\n      style({transform: 'translate3d(10px, 0, 0)', offset: 0.2}),\n      style({transform: 'translate3d(-10px, 0, 0)', offset: 0.3}),\n      style({transform: 'translate3d(10px, 0, 0)', offset: 0.4}),\n      style({transform: 'translate3d(-10px, 0, 0)', offset: 0.5}),\n      style({transform: 'translate3d(10px, 0, 0)', offset: 0.6}),\n      style({transform: 'translate3d(-10px, 0, 0)', offset: 0.7}),\n      style({transform: 'translate3d(10px, 0, 0)', offset: 0.8}),\n      style({transform: 'translate3d(-10px, 0, 0)', offset: 0.9}),\n      style({transform: 'translate3d(0, 0, 0)', offset: 1}),\n    ])\n  ),\n  {params: {timing: 1, delay: 0}}\n);\n","import {Component, Input, OnInit} from '@angular/core';\nimport {MatPasswordStrengthComponent} from '../mat-password-strength/mat-password-strength.component';\nimport {animate, animateChild, keyframes, query, stagger, style, transition, trigger, useAnimation} from '@angular/animations';\nimport {shake} from '../../animations/index';\n\n@Component({\n  selector: 'mat-password-strength-info',\n  exportAs: 'matPasswordStrengthInfo',\n  templateUrl: './mat-password-strength-info.component.html',\n  styleUrls: ['./mat-password-strength-info.component.scss'],\n  animations: [\n    // nice stagger effect when showing existing elements\n    trigger('list', [\n      transition(':enter', [\n        // child animation selector + stagger\n        query('@items',\n          stagger(300, animateChild())\n        )\n      ]),\n    ]),\n    trigger('items', [\n      // cubic-bezier for a tiny bouncing feel\n      transition(':enter', [\n        style({transform: 'scale(0.5)', opacity: 0}),\n        animate('1s cubic-bezier(.8,-0.6,0.2,1.5)',\n          style({transform: 'scale(1)', opacity: 1}))\n      ]),\n      transition(':leave', [\n        style({transform: 'scale(1)', opacity: 1, height: '*'}),\n        animate('1s cubic-bezier(.8,-0.6,0.2,1.5)',\n          style({transform: 'scale(0.5)', opacity: 0, height: '0px', margin: '0px'}))\n      ]),\n    ]),\n    trigger('positiveState', [\n      transition(':enter', [\n        style({'backface-visibility': 'visible'}),\n        animate(\n          '{{ timing }}s {{ delay }}s ease-in',\n          keyframes([\n            style({\n              opacity: 0,\n              transform:\n                'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, 90deg)',\n              offset: 0,\n            }),\n            style({\n              opacity: 1,\n              transform:\n                'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, -20deg)',\n              offset: 0.4,\n            }),\n            style({\n              transform:\n                'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, 10deg)',\n              offset: 0.6,\n            }),\n            style({\n              transform:\n                'perspective(400px) rotate3d({{ rotateX }}, {{ rotateY }}, 0, -5deg)',\n              offset: 0.8,\n            }),\n            style({\n              transform: 'perspective(400px) rotate3d(0, 0, 0, 0)',\n              offset: 1,\n            }),\n          ])\n        ),\n      ], {params: {timing: 1, delay: 0, rotateX: 1, rotateY: 0}}),\n    ]),\n    trigger('negativeState', [\n      transition(':enter', useAnimation(shake)),\n    ]),\n  ],\n})\nexport class MatPasswordStrengthInfoComponent implements OnInit {\n\n  @Input()\n  passwordComponent: MatPasswordStrengthComponent;\n\n  @Input()\n  enableScoreInfo = false;\n\n  @Input()\n  lowerCaseCriteriaMsg = 'contains at least one lower character';\n\n  @Input()\n  upperCaseCriteriaMsg = 'contains at least one upper character';\n\n  @Input()\n  digitsCriteriaMsg = 'contains at least one digit character';\n\n  @Input()\n  specialCharsCriteriaMsg = 'contains at least one special character';\n\n  @Input()\n  customCharsCriteriaMsg = 'contains at least one custom character';\n\n  @Input()\n  minCharsCriteriaMsg: string;\n\n  @Input()\n  matIconDone = 'done';\n\n  @Input()\n  matIconError = 'error';\n\n  ngOnInit(): void {\n    if (!this.minCharsCriteriaMsg) {\n      this.minCharsCriteriaMsg = `contains at least ${this.passwordComponent.min} characters`\n    }\n  }\n\n}\n","<mat-card @list>\n  <mat-card-content>\n    <div *ngIf=\"passwordComponent.enableLowerCaseLetterRule\" @items class=\"info-row\">\n      <div *ngIf=\"passwordComponent.containAtLeastOneLowerCaseLetter; then done else error\" @flipY>\n      </div>\n      <ng-template #done>\n        <mat-icon @positiveState color=\"primary\">{{matIconDone}}</mat-icon>\n      </ng-template>\n      <ng-template #error>\n        <mat-icon @negativeState color=\"warn\">{{matIconError}}</mat-icon>\n      </ng-template>\n      <span>{{lowerCaseCriteriaMsg}}</span>\n    </div>\n\n    <div *ngIf=\"passwordComponent.enableUpperCaseLetterRule\" @items class=\"info-row\">\n      <div *ngIf=\"passwordComponent.containAtLeastOneUpperCaseLetter; then done else error\">\n      </div>\n      <ng-template #done>\n        <mat-icon @positiveState color=\"primary\">{{matIconDone}}</mat-icon>\n      </ng-template>\n      <ng-template #error>\n        <mat-icon @negativeState color=\"warn\">{{matIconError}}</mat-icon>\n      </ng-template>\n      <span>{{upperCaseCriteriaMsg}}</span>\n    </div>\n\n    <div *ngIf=\"passwordComponent.enableDigitRule\" @items class=\"info-row\">\n      <div *ngIf=\"passwordComponent.containAtLeastOneDigit; then done else error\">\n      </div>\n      <ng-template #done>\n        <mat-icon @positiveState color=\"primary\">{{matIconDone}}</mat-icon>\n      </ng-template>\n      <ng-template #error>\n        <mat-icon @negativeState color=\"warn\">{{matIconError}}</mat-icon>\n      </ng-template>\n      <span>{{digitsCriteriaMsg}}</span>\n    </div>\n\n    <div *ngIf=\"passwordComponent.enableSpecialCharRule\" @items class=\"info-row\">\n      <div *ngIf=\"passwordComponent.containAtLeastOneSpecialChar; then done else error\">\n      </div>\n      <ng-template #done>\n        <mat-icon @positiveState color=\"primary\">{{matIconDone}}</mat-icon>\n      </ng-template>\n      <ng-template #error>\n        <mat-icon @negativeState color=\"warn\">{{matIconError}}</mat-icon>\n      </ng-template>\n      <span>{{specialCharsCriteriaMsg}}</span>\n    </div>\n\n    <div *ngIf=\"passwordComponent.enableLengthRule\" @items class=\"info-row\">\n      <div *ngIf=\"passwordComponent.containAtLeastMinChars; then done else error\">\n      </div>\n      <ng-template #done>\n        <mat-icon @positiveState color=\"primary\">{{matIconDone}}</mat-icon>\n      </ng-template>\n      <ng-template #error>\n        <mat-icon @negativeState color=\"warn\">{{matIconError}}</mat-icon>\n      </ng-template>\n      <span>{{minCharsCriteriaMsg}}</span>\n    </div>\n\n    <div *ngIf=\"passwordComponent.customValidator\" @items class=\"info-row\">\n      <div *ngIf=\"passwordComponent.containAtCustomChars; then done else error\">\n      </div>\n      <ng-template #done>\n        <mat-icon @positiveState color=\"primary\">{{matIconDone}}</mat-icon>\n      </ng-template>\n      <ng-template #error>\n        <mat-icon @negativeState color=\"warn\">{{matIconError}}</mat-icon>\n      </ng-template>\n      <span>{{customCharsCriteriaMsg}}</span>\n    </div>\n\n    <div *ngIf=\"enableScoreInfo\" @items class=\"info-row\">\n      <div *ngIf=\"passwordComponent.strength === 100; then done else error\">\n      </div>\n      <ng-template #done>\n        <mat-icon @positiveState color=\"primary\">{{matIconDone}}</mat-icon>\n      </ng-template>\n      <ng-template #error>\n        <mat-icon @negativeState color=\"warn\">{{matIconError}}</mat-icon>\n      </ng-template>\n      <span>Password's strength = {{passwordComponent.strength}} %100</span>\n    </div>\n\n  </mat-card-content>\n</mat-card>","import {CommonModule} from '@angular/common';\nimport {ModuleWithProviders, NgModule} from '@angular/core';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatRippleModule} from '@angular/material/core';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatIconModule} from '@angular/material/icon';\n\nimport {MatPassToggleVisibilityComponent, MatPasswordStrengthComponent, MatPasswordStrengthInfoComponent} from './component';\n\n\n// Export module's public API\n// export {MatPasswordStrengthComponent} from './component/mat-password-strength/mat-password-strength.component';\n// export {\n//   MatPasswordStrengthInfoComponent\n// } from './component/mat-password-strength-info/mat-password-strength-info.component';\n// export {MatPassToggleVisibilityComponent} from './component/mat-pass-toggle-visibility/mat-pass-toggle-visibility.component';\n// export {MatPasswordStrengthValidator} from './validator/mat-password-strength-validator';\n// validator\nexport {RegExpValidator} from './validator/regexp.class';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    MatProgressBarModule,\n    MatCardModule,\n    MatIconModule,\n    MatRippleModule\n  ],\n  exports: [\n    MatPasswordStrengthComponent,\n    MatPasswordStrengthInfoComponent,\n    MatPassToggleVisibilityComponent\n  ],\n  declarations: [\n    MatPasswordStrengthComponent,\n    MatPasswordStrengthInfoComponent,\n    MatPassToggleVisibilityComponent\n  ]\n})\nexport class MatPasswordStrengthModule {\n  static forRoot(): ModuleWithProviders<MatPasswordStrengthModule> {\n    return {\n      ngModule: MatPasswordStrengthModule,\n      providers: []\n    };\n  }\n}\n","/*\n * Public API Surface of password-strength\n */\n\nexport * from './lib/enum';\nexport * from './lib/component';\nexport * from './lib/animations';\nexport * from './lib/validator';\nexport * from './lib/mat-password-strength.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}